name: CI/CD

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      APP: ${{ secrets.DOCKER_REPO }}/funding-app:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Make secret properties
        run: |
          cd ./src/main/resources
          touch ./application-prod.properties
          echo "${{ secrets.PROD }}" > ./application-prod.properties
          touch ./application-cloud.yml
          echo "${{ secrets.CLOUD }}" > ./application-cloud.properties
          touch ./application-oauth.yml
          echo "${{ secrets.OAUTH }}" > ./application-oauth.properties
        shell: bash

      - name: Build with Gradle
        run: ./gradlew --build-cache clean build

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/app/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_REPO }}/funding-app:latest
          cache-from: type=gha

      - name: Make docker .env
        run: |
          cd ./docker
          touch .env
          echo "${{ secrets.DOCKER_REPO }}" > .env

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        env:
          DOCKER_COMPOSE: "./docker/docker-compose.yml"
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            docker compose -f $DOCKER_COMPOSE down --rmi all
            docker compose -f $DOCKER_COMPOSE up -d
